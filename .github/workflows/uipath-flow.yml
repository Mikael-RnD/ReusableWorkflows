# This is a basic workflow to help you get started with Actions

name: UiPath CI

# Controls when the workflow will run
on:
  # Triggers the workflow on call from other repository
  workflow_call:
    inputs:
      environment: 
        required: true
        type: string
      orchestratorUrl:
        required: true
        type: string
      orchestratorFolder:
        required: true
        type: string
      orchestratorTenant:
        required: true
        type: string
      organizationId:
        required: true
        type: string
      orchestratorApplicationScope:
        required: true
        type: string
    secrets:
      orchestratorApplicationId:
        required: true
      orchestratorApplicationSecret:
        required: true

jobs:
  uipath-tests:
    uses: ./.github/workflows/uipath-tests.yml
    with:
      environment: ${{ inputs.environment }}
      orchestratorUrl: ${{ inputs.orchestratorUrl }}
      orchestratorTenant: ${{ inputs.orchestratorTenant }}
      orchestratorFolder: ${{ inputs.orchestratorFolder }}
      organizationId: ${{ inputs.organizationId }}
      orchestratorApplicationScope: ${{ inputs.orchestratorApplicationScope }}
    secrets:
      orchestratorApplicationId: ${{ secrets.orchestratorApplicationId }}
      orchestratorApplicationSecret: ${{ secrets.orchestratorApplicationSecret }}
      
  tag:
    runs-on: ubuntu-latest
    needs: [uipath-tests]
    outputs: 
      release_tag: ${{ steps.bump_tag.outputs.new_version }}
      release_upload_url: ${{ steps.automatic_release.outputs.upload_url }}
    steps: 
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
        
      - run: echo Triggered by ${{ github.event_name }} event  
        
      - id: bump_tag
        name: Github Tag with semantic versioning
      # You may pin to the exact commit or the version.
        uses: hennejg/github-tag-action@v4.4.0
        with:
          # Required for permission to tag the repo.
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Comma separated list of branches (bash reg exp accepted) that will generate the release tags. Other branches and pull-requests generate versions postfixed with the commit hash and do not generate any tag. Examples: `master` or `.*` or `release.*,hotfix.*,master`...
          release_branches: "main,master"
          
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    needs: tag
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: Mikael-RnD/setup-uipath@main
      
      - uses: Mikael-RnD/UiPath-Pack@main
        with:
          orchestratorUrl: ${{ inputs.orchestratorUrl }}
          orchestratorTenant: ${{ inputs.organizationId }}
          orchestratorFolder: ${{ inputs.orchestratorFolder }}
          orchestratorApplicationId: ${{ secrets.orchestratorApplicationId }}
          orchestratorApplicationSecret: ${{ secrets.orchestratorApplicationSecret }}
          orchestratorApplicationScope: ${{ inputs.orchestratorApplicationScope }}
          orchestratorLogicalName: ${{ inputs.organizationId }} 
          projectVersion: ${{ needs.tag.outputs.release_tag }}
      
          
      # Upload packages as build artifacts to be handled by deploy job
      - uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/packages
          if-no-files-found: error
          retention-days: 90
      
  deploy:
    needs: build
    runs-on: windows-latest
    steps:
      # Download .nupkg packages created in build job to GitHub workspace
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3
        with:
          # Artifact name
          name: artifact # optional
          # Destination path
          path: ${{github.workspace}} # optional
      
      # The UiPath CLI is installed on Runner
      - uses: Mikael-RnD/setup-uipath@main
      
      # .nupkg packages are deployed to UiPath Orchestrator
      - name: UiPath Deploy
        uses: Mikael-RnD/UiPath-Deploy@main
        with:
          orchestratorUrl: ${{ inputs.orchestratorUrl }}
          orchestratorTenant: ${{ inputs.orchestratorTenant }}
          orchestratorFolder: ${{ inputs.orchestratorFolder }}
          orchestratorApplicationId: ${{ secrets.orchestratorApplicationId }}
          orchestratorApplicationSecret: ${{ secrets.orchestratorApplicationSecret }}
          orchestratorApplicationScope: ${{ inputs.orchestratorApplicationScope }}
          orchestratorLogicalName: ${{ inputs.organizationId }} 
